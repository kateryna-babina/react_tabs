{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","_ref","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","_jsxs","children","_jsx","className","map","href","concat","onClick","title","content","App","_useState","useState","_useState2","_slicedToArray","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAA4B,SAAHC,GAI/B,IAHLC,EAAID,EAAJC,KACAC,EAAaF,EAAbE,cACAC,EAAaH,EAAbG,cAEMC,EAAcH,EAAKI,MAAK,SAACC,GAAG,OAAKA,EAAIC,KAAOL,MAAkBD,EAAK,GAEzE,OACEO,eAAA,OAAK,UAAQ,gBAAeC,SAAA,CAC1BC,cAAA,OAAKC,UAAU,gBAAeF,SAC5BC,cAAA,MAAAD,SACGR,EAAKW,KAAI,SAAAN,GAAG,OACXI,cAAA,MAEEC,UAAWL,EAAIC,KAAOH,EAAYG,GAAK,YAAc,GACrD,UAAQ,MAAKE,SAEbC,cAAA,KACEG,KAAI,IAAAC,OAAMR,EAAIC,IACd,UAAQ,UACRQ,QAAS,WACHT,EAAIC,KAAOH,EAAYG,IACzBJ,EAAcG,IAEhBG,SAEDH,EAAIU,SAbFV,EAAIC,WAoBjBG,cAAA,OAEE,UAAQ,aAAYD,SAEnBL,EAAYa,SAHRb,EAAYG,QCnCZN,EAAO,CAClB,CAAEM,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,IAAAC,EAA0CC,mBAASnB,EAAK,GAAGM,IAAGc,EAAAC,YAAAH,EAAA,GAAvDjB,EAAamB,EAAA,GAAEE,EAAgBF,EAAA,GAQhCjB,EAAcH,EAAKI,MAAK,SAACC,GAAG,OAAKA,EAAIC,KAAOL,MAAkBD,EAAK,GAEzE,OACEO,eAAA,OAAKG,UAAU,UAASF,SAAA,CACtBC,cAAA,MAAIC,UAAU,QAAOF,SAAA,mBAAAK,OACCV,EAAYY,SAGlCN,cAACX,EAAI,CACHE,KAAMA,EACNC,cAAeA,EACfC,cAjBoB,SAACG,GACrBJ,IAAkBI,EAAIC,IACxBgB,EAAiBjB,EAAIC,WCf3BiB,IAASC,OAAOf,cAACQ,EAAG,IAAKQ,SAASC,eAAe,W","file":"static/js/main.8267ad0c.chunk.js","sourcesContent":["import { Tab } from '../../types/Tab';\n\ntype TabsProps = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<TabsProps> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={tab.id === selectedTab.id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== selectedTab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div\n        key={selectedTab.id}\n        data-cy=\"TabContent\"\n      >\n        {selectedTab.content}\n      </div>\n\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const handleTabSelected = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      setSelectedTabId(tab.id);\n    }\n  };\n\n  const selectedTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}